package com.hmsa.pharma.model.cfg.vo.up;

import com.hmsa.checkpoint.basic.classes.CheckpointEntityImpl;
import com.hmsa.checkpoint.basic.classes.CheckpointViewRowImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 16 18:39:57 AST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CfgTargetCustomersViewRowImpl extends CheckpointViewRowImpl {

    public static final int ENTITY_CFGTARGETCUSTOMERS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TargetCustId,
        TargetSecId,
        CustomerId,
        TrgQuantity,
        TrgAmount,
        CreateDate,
        CreatedBy,
        ModifyDate,
        ModifiedBy,
        Notes,
        RepId,
        CfgTargetSectionsView,
        LkbCustomersROView1,
        LkbCustSectionsROView1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int TARGETCUSTID = AttributesEnum.TargetCustId.index();
    public static final int TARGETSECID = AttributesEnum.TargetSecId.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int TRGQUANTITY = AttributesEnum.TrgQuantity.index();
    public static final int TRGAMOUNT = AttributesEnum.TrgAmount.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int MODIFYDATE = AttributesEnum.ModifyDate.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int REPID = AttributesEnum.RepId.index();
    public static final int CFGTARGETSECTIONSVIEW = AttributesEnum.CfgTargetSectionsView.index();
    public static final int LKBCUSTOMERSROVIEW1 = AttributesEnum.LkbCustomersROView1.index();
    public static final int LKBCUSTSECTIONSROVIEW1 = AttributesEnum.LkbCustSectionsROView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CfgTargetCustomersViewRowImpl() {
    }

    /**
     * Gets CfgTargetCustomers entity object.
     * @return the CfgTargetCustomers
     */
    public CheckpointEntityImpl getCfgTargetCustomers() {
        return (CheckpointEntityImpl) getEntity(ENTITY_CFGTARGETCUSTOMERS);
    }

    /**
     * Gets the attribute value for TARGET_CUST_ID using the alias name TargetCustId.
     * @return the TARGET_CUST_ID
     */
    public DBSequence getTargetCustId() {
        return (DBSequence) getAttributeInternal(TARGETCUSTID);
    }

    /**
     * Gets the attribute value for TARGET_SEC_ID using the alias name TargetSecId.
     * @return the TARGET_SEC_ID
     */
    public Number getTargetSecId() {
        return (Number) getAttributeInternal(TARGETSECID);
    }

    /**
     * Sets <code>value</code> as attribute value for TARGET_SEC_ID using the alias name TargetSecId.
     * @param value value to set the TARGET_SEC_ID
     */
    public void setTargetSecId(Number value) {
        setAttributeInternal(TARGETSECID, value);
    }

    /**
     * Gets the attribute value for CUSTOMER_ID using the alias name CustomerId.
     * @return the CUSTOMER_ID
     */
    public Number getCustomerId() {
        return (Number) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CUSTOMER_ID using the alias name CustomerId.
     * @param value value to set the CUSTOMER_ID
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for TRG_QUANTITY using the alias name TrgQuantity.
     * @return the TRG_QUANTITY
     */
    public Number getTrgQuantity() {
        return (Number) getAttributeInternal(TRGQUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRG_QUANTITY using the alias name TrgQuantity.
     * @param value value to set the TRG_QUANTITY
     */
    public void setTrgQuantity(Number value) {
        setAttributeInternal(TRGQUANTITY, value);
        CfgTargetSectionsViewRowImpl cfgTargetSectionsView = getCfgTargetSectionsView();
        CfgTargetViewRowImpl cfgTargetView = cfgTargetSectionsView.getCfgTargetView();
        if(value != null){
            if (cfgTargetView != null) {
                if (cfgTargetView.getUnitPrice() != null) {
                    setTrgAmount(cfgTargetView.getUnitPrice().multiply(value));
                }
            }
        }
    }

    /**
     * Gets the attribute value for TRG_AMOUNT using the alias name TrgAmount.
     * @return the TRG_AMOUNT
     */
    public Number getTrgAmount() {
        return (Number) getAttributeInternal(TRGAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for TRG_AMOUNT using the alias name TrgAmount.
     * @param value value to set the TRG_AMOUNT
     */
    public void setTrgAmount(Number value) {
        setAttributeInternal(TRGAMOUNT, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @return the MODIFY_DATE
     */
    public Date getModifyDate() {
        return (Date) getAttributeInternal(MODIFYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @param value value to set the MODIFY_DATE
     */
    public void setModifyDate(Date value) {
        setAttributeInternal(MODIFYDATE, value);
    }

    /**
     * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @return the MODIFIED_BY
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @param value value to set the MODIFIED_BY
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RepId.
     * @return the RepId
     */
    public Number getRepId() {
        return getCfgTargetSectionsView().getRepId();
        //return (Number) getAttributeInternal(REPID);
    }

    /**
     * Gets the associated <code>CfgTargetSectionsViewRowImpl</code> using master-detail link CfgTargetSectionsView.
     */
    public CfgTargetSectionsViewRowImpl getCfgTargetSectionsView() {
        return (CfgTargetSectionsViewRowImpl) getAttributeInternal(CFGTARGETSECTIONSVIEW);
    }

    /**
     * Sets the master-detail link CfgTargetSectionsView between this object and <code>value</code>.
     */
    public void setCfgTargetSectionsView(CfgTargetSectionsViewRowImpl value) {
        setAttributeInternal(CFGTARGETSECTIONSVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LkbCustomersROView1.
     */
    public RowSet getLkbCustomersROView1() {
        return (RowSet) getAttributeInternal(LKBCUSTOMERSROVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LkbCustSectionsROView1.
     */
    public RowSet getLkbCustSectionsROView1() {
        return (RowSet) getAttributeInternal(LKBCUSTSECTIONSROVIEW1);
    }
}

