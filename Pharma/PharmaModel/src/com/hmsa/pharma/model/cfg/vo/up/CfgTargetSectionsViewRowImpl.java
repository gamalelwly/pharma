package com.hmsa.pharma.model.cfg.vo.up;

import com.hmsa.checkpoint.basic.classes.CheckpointEntityImpl;
import com.hmsa.checkpoint.basic.classes.CheckpointViewRowImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 16 18:16:07 AST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CfgTargetSectionsViewRowImpl extends CheckpointViewRowImpl {


    public static final int ENTITY_CFGTARGETSECTIONS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TrgSecId,
        TargetId,
        SectionId,
        TrgPercent,
        TrgQuantity,
        TrgAmount,
        CreateDate,
        CreatedBy,
        ModifyDate,
        ModifiedBy,
        Notes,
        RepId,
        CfgTargetCustomersView,
        CfgTargetView,
        LkbCustSectionsROView1,
        CfgTargetROView1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRGSECID = AttributesEnum.TrgSecId.index();
    public static final int TARGETID = AttributesEnum.TargetId.index();
    public static final int SECTIONID = AttributesEnum.SectionId.index();
    public static final int TRGPERCENT = AttributesEnum.TrgPercent.index();
    public static final int TRGQUANTITY = AttributesEnum.TrgQuantity.index();
    public static final int TRGAMOUNT = AttributesEnum.TrgAmount.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int MODIFYDATE = AttributesEnum.ModifyDate.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int REPID = AttributesEnum.RepId.index();
    public static final int CFGTARGETCUSTOMERSVIEW = AttributesEnum.CfgTargetCustomersView.index();
    public static final int CFGTARGETVIEW = AttributesEnum.CfgTargetView.index();
    public static final int LKBCUSTSECTIONSROVIEW1 = AttributesEnum.LkbCustSectionsROView1.index();
    public static final int CFGTARGETROVIEW1 = AttributesEnum.CfgTargetROView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CfgTargetSectionsViewRowImpl() {
    }

    /**
     * Gets CfgTargetSections entity object.
     * @return the CfgTargetSections
     */
    public CheckpointEntityImpl getCfgTargetSections() {
        return (CheckpointEntityImpl) getEntity(ENTITY_CFGTARGETSECTIONS);
    }

    /**
     * Gets the attribute value for TRG_SEC_ID using the alias name TrgSecId.
     * @return the TRG_SEC_ID
     */
    public DBSequence getTrgSecId() {
        return (DBSequence) getAttributeInternal(TRGSECID);
    }

    /**
     * Sets <code>value</code> as attribute value for TRG_SEC_ID using the alias name TrgSecId.
     * @param value value to set the TRG_SEC_ID
     */
    public void setTrgSecId(DBSequence value) {
        setAttributeInternal(TRGSECID, value);
    }

    /**
     * Gets the attribute value for TARGET_ID using the alias name TargetId.
     * @return the TARGET_ID
     */
    public Number getTargetId() {
        return (Number) getAttributeInternal(TARGETID);
    }

    /**
     * Sets <code>value</code> as attribute value for TARGET_ID using the alias name TargetId.
     * @param value value to set the TARGET_ID
     */
    public void setTargetId(Number value) {
        setAttributeInternal(TARGETID, value);
    }

    /**
     * Gets the attribute value for SECTION_ID using the alias name SectionId.
     * @return the SECTION_ID
     */
    public Number getSectionId() {
        return (Number) getAttributeInternal(SECTIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for SECTION_ID using the alias name SectionId.
     * @param value value to set the SECTION_ID
     */
    public void setSectionId(Number value) {
        setAttributeInternal(SECTIONID, value);
    }

    /**
     * Gets the attribute value for TRG_PERCENT using the alias name TrgPercent.
     * @return the TRG_PERCENT
     */
    public Number getTrgPercent() {
        return (Number) getAttributeInternal(TRGPERCENT);
    }

    /**
     * Sets <code>value</code> as attribute value for TRG_PERCENT using the alias name TrgPercent.
     * @param value value to set the TRG_PERCENT
     */
    public void setTrgPercent(Number value) {
        setAttributeInternal(TRGPERCENT, value);
        if(value != null){
            if (getCfgTargetView() != null) {
                if (getCfgTargetView().getTrgQuantity() != null) {
                    setTrgQuantity(getCfgTargetView().getTrgQuantity().multiply(value.divide(100)));
                }
                if (getCfgTargetView().getTrgAmount() != null) {
                    setTrgAmount(getCfgTargetView().getTrgAmount().multiply(value.divide(100)));
                }
            }
        }
    }

    /**
     * Gets the attribute value for TRG_QUANTITY using the alias name TrgQuantity.
     * @return the TRG_QUANTITY
     */
    public Number getTrgQuantity() {
        return (Number) getAttributeInternal(TRGQUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRG_QUANTITY using the alias name TrgQuantity.
     * @param value value to set the TRG_QUANTITY
     */
    public void setTrgQuantity(Number value) {
        setAttributeInternal(TRGQUANTITY, value);
        if(value != null){
            if (getCfgTargetView() != null) {
                if (getCfgTargetView().getUnitPrice() != null) {
                    setTrgAmount(getCfgTargetView().getUnitPrice().multiply(value));
                }
                //setTrgPercent(value.divide(getCfgTargetView().getTrgQuantity())); //Stack overflow
                setAttributeInternal(TRGPERCENT, value.divide(getCfgTargetView().getTrgQuantity()).multiply(100));
            }
        }
    }

    /**
     * Gets the attribute value for TRG_AMOUNT using the alias name TrgAmount.
     * @return the TRG_AMOUNT
     */
    public Number getTrgAmount() {
        return (Number) getAttributeInternal(TRGAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for TRG_AMOUNT using the alias name TrgAmount.
     * @param value value to set the TRG_AMOUNT
     */
    public void setTrgAmount(Number value) {
        setAttributeInternal(TRGAMOUNT, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @return the MODIFY_DATE
     */
    public Date getModifyDate() {
        return (Date) getAttributeInternal(MODIFYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @param value value to set the MODIFY_DATE
     */
    public void setModifyDate(Date value) {
        setAttributeInternal(MODIFYDATE, value);
    }

    /**
     * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @return the MODIFIED_BY
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @param value value to set the MODIFIED_BY
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RepId.
     * @return the RepId
     */
    public Number getRepId() {
        return getCfgTargetView().getRepId();
        //return (Number) getAttributeInternal(REPID);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link CfgTargetCustomersView.
     */
    public RowIterator getCfgTargetCustomersView() {
        return (RowIterator) getAttributeInternal(CFGTARGETCUSTOMERSVIEW);
    }

    /**
     * Gets the associated <code>CfgTargetViewRowImpl</code> using master-detail link CfgTargetView.
     */
    public CfgTargetViewRowImpl getCfgTargetView() {
        return (CfgTargetViewRowImpl) getAttributeInternal(CFGTARGETVIEW);
    }

    /**
     * Sets the master-detail link CfgTargetView between this object and <code>value</code>.
     */
    public void setCfgTargetView(CfgTargetViewRowImpl value) {
        setAttributeInternal(CFGTARGETVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LkbCustSectionsROView1.
     */
    public RowSet getLkbCustSectionsROView1() {
        return (RowSet) getAttributeInternal(LKBCUSTSECTIONSROVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CfgTargetROView1.
     */
    public RowSet getCfgTargetROView1() {
        return (RowSet) getAttributeInternal(CFGTARGETROVIEW1);
    }
}

